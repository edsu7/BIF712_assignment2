#!/home/bif701_163a15/software/bin/perl

#Assignment Number : #2
#Subject Code and Section : BIF712
#Student Name : Edmund Su
#Student Number : 104699160
#Instructor Name : Danny Abesdris
#Due Date : 12/13/2016
#Date Submitted : 12/9/2016

use strict;
use warnings;
use CGI;
use LWP::Simple;
use Mail::Sendmail;

my $cgi= new CGI;
my ($baseURL, @attributes, $virus, $ncbiURL, @tmpArray , $genbankFile ,$rawData );

$baseURL = "ftp://ftp.ncbi.nih.gov/genomes/Viruses/";

@attributes = $cgi->param('attributes');#Selected fields that we want
$virus = $cgi->param('viruses');

$ncbiURL = $baseURL.$virus;

@tmpArray = split('/',$virus);
$genbankFile = $tmpArray[1];

unless(-e $genbankFile) {
   $rawData = get($ncbiURL); # this function should download the genbank file
			     # and store it in the current working directory
   open(FD, "> $genbankFile") || die("Error opening file... $genbankFile $!\n");
   print FD $rawData;
   close(FD);
}

# slurp the genbank file into a scalar!
$/ = undef;
open(FD, "< $genbankFile") || die("Error opening file... $genbankFile $!\n");
$rawData = <FD>;
close(FD);

print "Content-type: text/html\n\n";

print "<html><head><title>GenBank Results...</title></head>\n";
print "<body><pre>\n";
print "full URL: $ncbiURL\n";

my @result;
my @matches;
my @bases = ("a","c","t","g");
my $baseCount = "BASE COUNT";

foreach my $tempattr (@attributes){
    if ($tempattr eq "LOCUS"){
        @matches = ($rawData=~  m/^LOCUS.*?(?=DEFINITION)/gs);
        push (@result,@matches);
    }
    elsif ($tempattr eq "DEFINITION"){
        @matches = ($rawData =~ m/DEFINITION.*?(?=ACCESSION)/gs);
        push (@result,@matches);
    }
    elsif ($tempattr eq "ACCESSION"){
        @matches = ($rawData=~m/ACCESSION.*?(?=VERSION)/gs);
        push (@result,@matches);
    }
    elsif ($tempattr eq "VERSION"){
        @matches = ($rawData =~ m/VERSION.*?(?=DBLINK)/gs);
        push (@result,@matches);
    }
    elsif ($tempattr eq "KEYWORDS"){
        @matches = ($rawData=~ m/KEYWORDS.*?(?=SOURCE)/gs);
        push (@result,@matches);
    }
    elsif ($tempattr eq "SOURCE"){
        @matches = ($rawData =~ m/SOURCE.*?(?=REFERENCE)/gs);
        push (@result,@matches);
    }
    elsif ($tempattr eq "ORGANISM"){
        @matches = ($rawData =~ m/  ORGANISM.*?(?=REFERENCE)/gs);
        push (@result,@matches);
    }
    elsif ($tempattr eq "REFERENCE"){
        @matches = ($rawData=~ m/REFERENCE.*?(?=REFERENCE)|REFERENCE.*?(?=FEATURES)/gs);
        push (@result,@matches);
    }
    elsif ($tempattr eq "AUTHORS"){
        @matches = ($rawData=~ m/  CONSRTM.*?(?=  TITLE)|  AUTHORS.*?(?=  TITLE)/sg);
        push (@result,@matches);
    }
    elsif ($tempattr eq "TITLE"){
        @matches = ($rawData=~ m/  TITLE.*?(?=  JOURNAL)/gs);
        push (@result,@matches);
    }
    elsif ($tempattr eq "JOURNAL"){
        @matches = ($rawData=~ m/  JOURNAL.*?(?=  PUBMED)|  JOURNAL.*?(?=REFERENCE)|  JOURNAL.*?(?=COMMENT)/gs);
        push (@result,@matches);
    }
    elsif ($tempattr eq "MEDLINE"){
        @matches = ($rawData=~ m/   PUBMED.*?(?=REFERENCE)/gs);
        push (@result,@matches);
    }
    elsif ($tempattr eq "FEATURES"){
        @matches = ($rawData=~ m/FEATURES.*?(?=ORIGIN)/gs);
        push (@result,@matches);
    }
    elsif ($tempattr eq "BASECOUNT"){
	@matches = ($rawData=~ m/ORIGIN.*\/\//gs);
        foreach my $nucleotide (@bases){
            my $count =eval"\$matches[0] =~ tr/$nucleotide//";
            $baseCount.="     $count $nucleotide";
         }
	 $baseCount.="\n";
         push (@result,$baseCount);
    }
    elsif ($tempattr eq "ORIGIN"){
        @matches = ($rawData=~ m/ORIGIN.*\/\//gs);
        push (@result,@matches);
    }

}

my $email = $cgi->param('mailto');

sub email($){
my $d = shift @_;
my $ecount = $d =~m/.{1,}@.{1,}\..{2,}/;
if ($ecount==1){
        my %mail = ( To      => $d,
                                From    => 'esu7@myseneca.ca',
                                Message => "@result"
                );
sendmail(%mail) or die $Mail::Sendmail::error;
    }
else{
        print "email not valid\n";
        print "</pre></body>></html>\n";
	die;
    }
}

email($email);

print @result;
print "\n";
print "OK! Sent mail message...\n";
print "</pre></body>></html>\n";

#Oath:
#
#Student Assignment Submission Form
#==================================
#I/we declare that the attached assignment is wholly my/our
#own work in accordance with Seneca Academic Policy.  No part of this
#assignment has been copied manually or electronically from any
#other source (including web sites) or distributed to other students.
#
#Name(s):Edmund Su                                       Student ID(s):#104699160